# Copyright (c) 2025 Nordic Semiconductor ASA
# Copyright (c) 2025 Common Ground Electronics <https://cgnd.dev>
# SPDX-License-Identifier: Apache-2.0

# Originally adapted from https://github.com/nrfconnect/ncs-example-application/blob/main/.github/workflows/build-using-toolchain-bundle.yml

name: Build Firmware

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
  workflow_call:
    outputs:
      nrf_toolchain_image_tag:
        # https://github.com/nrfconnect/sdk-nrf/pkgs/container/sdk-nrf-toolchain
        description: The sdk-nrf-toolchain image tag
        value: ${{ jobs.set_version_info.outputs.nrf_toolchain_image_tag }}
      build_version_tag:
        description: The build version tag
        value: ${{ jobs.set_version_info.outputs.build_version_tag }}
      build_version:
        description: The build version
        value: ${{ jobs.set_version_info.outputs.build_version }}

env:
  ARTIFACTS_RELATIVE_PATH: artifacts
  PROJECT_RELATIVE_PATH: ${{ github.event.repository.name }}
  WEST_WORKSPACE_PATH: ./west-workspace

jobs:
  set_version_info:
    name: Set Version Info
    uses: ./.github/workflows/version-info.yml

  build_firmware:
    name: Build Firmware
    needs: set_version_info
    runs-on: ubuntu-latest
    container: ghcr.io/nrfconnect/sdk-nrf-toolchain:${{ needs.set_version_info.outputs.nrf_toolchain_image_tag }}
    defaults:
      run:
        # Bash shell is needed to set toolchain related environment variables in docker container
        # It is a workaround for GitHub Actions limitation https://github.com/actions/runner/issues/1964
        shell: bash
    strategy:
      matrix:
        board: ["thingy91x/nrf9151/ns"]
    steps:
      - name: Set sanitized board name
        run: |
          SANITIZED_BOARD_NAME=$(echo ${{ matrix.board }} | tr '/' '_')
          echo "SANITIZED_BOARD_NAME=$SANITIZED_BOARD_NAME"
          echo "SANITIZED_BOARD_NAME=$SANITIZED_BOARD_NAME" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          path: ${{ env.WEST_WORKSPACE_PATH }}/${{ env.PROJECT_RELATIVE_PATH }}

      - name: Initialize west workspace
        working-directory: ${{ env.WEST_WORKSPACE_PATH }}
        run: |
          west init -l ${{ env.PROJECT_RELATIVE_PATH }}
          west update -o=--depth=1 -n

      - name: Build firmware
        working-directory: ${{ env.WEST_WORKSPACE_PATH }}
        run: |
          west build -b ${{ matrix.board }} --pristine=always --sysbuild ${{ env.PROJECT_RELATIVE_PATH }}

      - name: Create build artifacts
        working-directory: ${{ env.WEST_WORKSPACE_PATH }}/build
        run: |
          mkdir -p ${{ env.ARTIFACTS_RELATIVE_PATH }}
          cp ${{ env.PROJECT_RELATIVE_PATH }}/zephyr/.config ${{ env.ARTIFACTS_RELATIVE_PATH }}/${{ env.PROJECT_RELATIVE_PATH }}_${{ needs.set_version_info.outputs.build_version_tag }}_${{ env.SANITIZED_BOARD_NAME }}.config
          cp dfu_application.zip ${{ env.ARTIFACTS_RELATIVE_PATH }}/${{ env.PROJECT_RELATIVE_PATH }}_${{ needs.set_version_info.outputs.build_version_tag }}_${{ env.SANITIZED_BOARD_NAME }}_dfu_application.zip
          cp merged.hex ${{ env.ARTIFACTS_RELATIVE_PATH }}/${{ env.PROJECT_RELATIVE_PATH }}_${{ needs.set_version_info.outputs.build_version_tag }}_${{ env.SANITIZED_BOARD_NAME }}_merged.hex
          cp ${{ env.PROJECT_RELATIVE_PATH }}/zephyr/zephyr.bin ${{ env.ARTIFACTS_RELATIVE_PATH }}/${{ env.PROJECT_RELATIVE_PATH }}_${{ needs.set_version_info.outputs.build_version_tag }}_${{ env.SANITIZED_BOARD_NAME }}_zephyr.bin
          cp ${{ env.PROJECT_RELATIVE_PATH }}/zephyr/zephyr.elf ${{ env.ARTIFACTS_RELATIVE_PATH }}/${{ env.PROJECT_RELATIVE_PATH }}_${{ needs.set_version_info.outputs.build_version_tag }}_${{ env.SANITIZED_BOARD_NAME }}_zephyr.elf
          cp ${{ env.PROJECT_RELATIVE_PATH }}/zephyr/zephyr.hex ${{ env.ARTIFACTS_RELATIVE_PATH }}/${{ env.PROJECT_RELATIVE_PATH }}_${{ needs.set_version_info.outputs.build_version_tag }}_${{ env.SANITIZED_BOARD_NAME }}_zephyr.hex
          cp ${{ env.PROJECT_RELATIVE_PATH }}/zephyr/zephyr.signed.bin ${{ env.ARTIFACTS_RELATIVE_PATH }}/${{ env.PROJECT_RELATIVE_PATH }}_${{ needs.set_version_info.outputs.build_version_tag }}_${{ env.SANITIZED_BOARD_NAME }}_zephyr.signed.bin
          cp ${{ env.PROJECT_RELATIVE_PATH }}/zephyr/zephyr.signed.hex ${{ env.ARTIFACTS_RELATIVE_PATH }}/${{ env.PROJECT_RELATIVE_PATH }}_${{ needs.set_version_info.outputs.build_version_tag }}_${{ env.SANITIZED_BOARD_NAME }}_zephyr.signed.hex

      - name: Create partition manager report
        working-directory: ${{ env.WEST_WORKSPACE_PATH }}/build
        run: |
          ninja partition_manager_report
          ninja partition_manager_report > ${{ env.ARTIFACTS_RELATIVE_PATH }}/${{ env.PROJECT_RELATIVE_PATH }}_${{ needs.set_version_info.outputs.build_version_tag }}_${{ env.SANITIZED_BOARD_NAME }}_pm_report.txt
          sed -i '1d' ${{ env.ARTIFACTS_RELATIVE_PATH }}/${{ env.PROJECT_RELATIVE_PATH }}_${{ needs.set_version_info.outputs.build_version_tag }}_${{ env.SANITIZED_BOARD_NAME }}_pm_report.txt

      - name: Upload build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: artifacts_${{ github.run_id }}_${{ env.SANITIZED_BOARD_NAME }}
          path: ${{ env.WEST_WORKSPACE_PATH }}/build/${{ env.ARTIFACTS_RELATIVE_PATH }}
          if-no-files-found: error
